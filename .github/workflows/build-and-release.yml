name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Test DingTalk notification (optional)
      run: |
        echo "Testing DingTalk integration..."
        python source/test_dingtalk.py || echo "DingTalk test skipped - webhook not configured"

  build-linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Linux executables
      run: |
        pyinstaller --onefile source/network_monitor.py --name NetworkMonitor-CLI-Linux
        pyinstaller --onefile source/network_monitor_gui.py --name NetworkMonitor-GUI-Linux

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          dist/NetworkMonitor-CLI-Linux
          dist/NetworkMonitor-GUI-Linux

  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Windows executables
      run: |
        pyinstaller --onefile source/network_monitor.py --name NetworkMonitor-CLI-Windows
        pyinstaller --onefile --windowed source/network_monitor_gui.py --name NetworkMonitor-GUI-Windows

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: |
          dist/NetworkMonitor-CLI-Windows.exe
          dist/NetworkMonitor-GUI-Windows.exe

  build-macos:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build macOS executables
      run: |
        pyinstaller --onefile source/network_monitor.py --name NetworkMonitor-CLI-macOS
        pyinstaller --onefile --windowed source/network_monitor_gui.py --name NetworkMonitor-GUI-macOS

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          dist/NetworkMonitor-CLI-macOS
          dist/NetworkMonitor-GUI-macOS

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      releases: write
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List downloaded files
      run: |
        echo "Downloaded artifacts:"
        find . -type f -name "*NetworkMonitor*" | sort
        echo "All files in current directory:"
        ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          **/NetworkMonitor-CLI-Linux
          **/NetworkMonitor-GUI-Linux
          **/NetworkMonitor-CLI-Windows.exe
          **/NetworkMonitor-GUI-Windows.exe
          **/NetworkMonitor-CLI-macOS
          **/NetworkMonitor-GUI-macOS
        generate_release_notes: true
        draft: false
        prerelease: false
        fail_on_unmatched_files: false